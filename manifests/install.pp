# @summary Install cvmfs from a yum repository.
# @api private
#
class cvmfs::install (
  $cvmfs_version = $cvmfs::cvmfs_version,
  $cvmfs_cache_base = $cvmfs::cvmfs_cache_base,
  $repo_manage = $cvmfs::repo_manage,
  $jitter = $cvmfs::jitter,
  $bc_for_jitter = $cvmfs::bc_for_jitter,
) inherits cvmfs {
  if $repo_manage {
    case $facts['os']['family'] {
      'RedHat': {
        contain 'cvmfs::yum'
        Class['cvmfs::yum'] -> Package['cvmfs']
      }
      'Debian': {
        contain 'cvmfs::apt'
        Class['cvmfs::apt'] -> Package['cvmfs']
        # Needed since apt::update is only notified in apt::source, but not contained.
        Class['apt::update'] -> Package['cvmfs']
      }
      default: { fail('Only repositories for RedHat or Debian family can be managed') }
    }
  }

  # Create the cache dir if one is defined, otherwise assume default is in the package.
  # Require the package so we know the user is in place.
  # We need to change the selinux context of this new directory below.
  $cache_seltype = 'cvmfs_cache_t'

  # Compare the default value with the one from hiera if declared
  $default_cvmfs_cache_base  = '/var/lib/cvmfs'

  if $cvmfs_cache_base != $default_cvmfs_cache_base {
    file { $cvmfs_cache_base:
      ensure  => directory,
      owner   => cvmfs,
      group   => cvmfs,
      mode    => '0700',
      seltype => $cache_seltype,
      require => Package['cvmfs'],
    }
  }

  package { 'cvmfs':
    ensure  => $cvmfs_version,
  }

  # Create a file for the cvmfs
  file { '/etc/cvmfs/cvmfsfacts.yaml':
    ensure  => file,
    mode    => '0644',
    content => "---\n#This file generated by puppet and is used by custom facts only.\ncvmfs_cache_base: ${cvmfs_cache_base}\n",
    require => Package['cvmfs'],
  }

  if $jitter and $bc_for_jitter {
    package { 'bc':
      ensure => installed,
    }
  }
}
